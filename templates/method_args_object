package [% method.fully_namespaced %];
  use Moose;
  use MooseX::ClassAttribute;

  [%- FOREACH property = method.arguments %]
  has '[% property.name %]' => (is => 'ro'
    [%- IF (property.required) %], required => 1[% END -%]
    [%- IF (property.perl_type) %], isa => '[% property.perl_type %]'[% END -%]
    [%- IF (property.default_value.defined) %], default => '[% property.default_value %]'[% END -%],
    traits => [ '[% property.in_trait %]' ],
  );
  [%- END %]

  class_has _api_uri => (is => 'ro', default => '[% method.path %]');
  class_has _returns => (is => 'ro', default => sub {
    [% FOREACH return_code IN method.return.keys.sort %]
      [% return_code %] => '[% method.return.$return_code.fully_namespaced %]',
    [% END %]
  });
  class_has _api_method => (is => 'ro', default => '[% method.method %]');
1;
