package [% method.fully_namespaced %];
  use Moose;
  use MooseX::ClassAttribute;

  [%- FOREACH property = method.arguments %]
  has '[% property.name %]' => (is => 'ro'
    [%- IF (property.required) %], required => 1[% END -%]
    [%- IF (property.perl_type) %], isa => '[% property.perl_type %]'[% END -%]
    [%- IF (property.default_value.defined) %], default => '[% property.default_value %]'[% END -%],
    traits => [ '[% property.in_trait %]'
      [%- IF (property.special_requestname) %], 'Azure::LocationInResponse'[% END -%]
    [%- %] ],
    [%- IF (property.special_requestname) %] location => '[% property.original_name %]',[% END %]
  );
  [%- END %]

  class_has _api_uri => (is => 'ro', default => '[% method.path %]');
  class_has _returns => (is => 'ro', isa => 'HashRef', default => sub { {
    [% FOREACH return_code IN method.return.keys.sort %]
      [% return_code %] => [% IF (method.return.$return_code.is_undef) %]undef[% ELSE %]'[% method.return.$return_code.fully_namespaced %]'[% END %],
    [% END %]
  } });
  class_has _is_async => (is => 'ro', default => [% method.is_async %]);
  class_has _api_method => (is => 'ro', default => '[% method.method %]');
1;
